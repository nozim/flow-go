// Code generated by mockery v2.21.4. DO NOT EDIT.

package mockp2p

import mock "github.com/stretchr/testify/mock"

// RPCControlTracking is an autogenerated mock type for the RPCControlTracking type
type RPCControlTracking struct {
	mock.Mock
}

// LastHighestIHaveRPCSize provides a mock function with given fields:
func (_m *RPCControlTracking) LastHighestIHaveRPCSize() int64 {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	return r0
}

// WasIHaveRPCSent provides a mock function with given fields: messageID
func (_m *RPCControlTracking) WasIHaveRPCSent(messageID string) bool {
	ret := _m.Called(messageID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(messageID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewRPCControlTracking interface {
	mock.TestingT
	Cleanup(func())
}

// NewRPCControlTracking creates a new instance of RPCControlTracking. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRPCControlTracking(t mockConstructorTestingTNewRPCControlTracking) *RPCControlTracking {
	mock := &RPCControlTracking{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
